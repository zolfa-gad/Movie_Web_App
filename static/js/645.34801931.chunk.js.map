{"version":3,"file":"static/js/645.34801931.chunk.js","mappings":"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","sources":["components/reusable/IconTextLabelItem/IconTextLabelItem.jsx","webpack://movie-app/./src/pages/MovieDetailPage/MovieDetailPage.module.css?179a","components/reusable/CastCardItem/CastCardItem.jsx","pages/MovieDetailPage/MovieDetailPage.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst IconTextLabelItem = ({ text, icon, color, width }) => {\r\n  return (\r\n    <div\r\n      className=\" d-flex justify-content-center align-items-center shadow  gap-2 p-2 px-1\"\r\n      style={{ color: color, width: width }}\r\n    >\r\n      <span>\r\n        {icon}\r\n      </span>\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconTextLabelItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetail\":\"MovieDetailPage_movieDetail__qMKNE\",\"detail\":\"MovieDetailPage_detail__ERFRB\"};","import React from \"react\";\r\nimport imageNotFound from '../../../images/istockphoto-1367855191-612x612.jpg'\r\n\r\nconst CastCardItem = ({ cast }) => {\r\n  return (\r\n    <div className=\" d-flex flex-column justify-content-center align-items-center gap-2\">\r\n      <img\r\n        className=\"rounded-circle border shadow object-fit-cover\"\r\n        src={`https://image.tmdb.org/t/p/original/${cast.profile_path}`}\r\n        alt=\"\"\r\n        width={\"170px\"}\r\n        height={\"200px\"}\r\n        onError={(event) => {\r\n          if (\r\n            event.target.src.includes(\"null\") ||\r\n            event.target.src.includes(\"undefined\")\r\n          ) {\r\n            event.target.src = imageNotFound;\r\n          }\r\n        }}\r\n      />\r\n      <span className=\"satisfy-font fs-3 text-center bg-dark p-2 rounded-2\">\r\n        {cast.original_name}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastCardItem;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport styles from \"./MovieDetailPage.module.css\";\r\nimport { DataContext } from \"../../context/DataContextStore\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport IconTextLabelItem from \"../../components/reusable/IconTextLabelItem/IconTextLabelItem\";\r\nimport ButtonItem from \"../../components/reusable/ButtonItem/ButtonItem\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport { BsCalendarDate, BsStarFill, BsThreeDots } from \"react-icons/bs\";\r\nimport { VscEye } from \"react-icons/vsc\";\r\nimport { LuLanguages } from \"react-icons/lu\";\r\nimport { BiTimeFive } from \"react-icons/bi\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Navigation, Scrollbar } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/scrollbar\";\r\nimport CastCardItem from \"../../components/reusable/CastCardItem/CastCardItem\";\r\n\r\nconst MovieDetailPage = () => {\r\n  const { id, type } = useParams();\r\n  // const { state } = useLocation();\r\n\r\n  // const id = state.id;\r\n\r\n  const { getDataFromAPI } = useContext(DataContext);\r\n\r\n  const [movie, setMovieData] = useState({});\r\n  const [castList, setCastData] = useState([]);\r\n\r\n  const iconData = [\r\n    {\r\n      icon: <BsStarFill size={25} className=\"pb-1 \" />,\r\n      text: `${movie.rate}`,\r\n      color: \"yellow\",\r\n    },\r\n    { icon: <BiTimeFive size={27} />, text: `${movie.duration}m` },\r\n\r\n    { icon: <LuLanguages size={27} />, text: `${movie.language}` },\r\n\r\n    { icon: <VscEye size={27} />, text: `${movie.popularity}` },\r\n\r\n    {\r\n      icon: <BsCalendarDate size={27} />,\r\n      text: `${new Date(movie.date).toDateString()}`,\r\n    },\r\n\r\n    movie.episodesNumber !== undefined\r\n      ? {\r\n          icon: <BsStarFill size={25} className=\"pb-1 \" />,\r\n          text: `${movie.episodesNumber}`,\r\n          color: \"yellow\",\r\n        }\r\n      : \"\",\r\n\r\n    movie.seasonsNumber !== undefined\r\n      ? {\r\n          icon: <BsStarFill size={25} className=\"pb-1 \" />,\r\n          text: `${movie.seasonsNumber}`,\r\n          color: \"yellow\",\r\n        }\r\n      : \"\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    console.log(id, \"id\");\r\n    console.log(type, \"type\");\r\n\r\n    getDataFromAPI(`https://api.themoviedb.org/3/${type}/${id}`).then(\r\n      (data) => {\r\n        let item;\r\n        if (type === \"movie\") {\r\n          item = {\r\n            id: data.id,\r\n            title: data.original_title,\r\n            overview: data.overview,\r\n            rate: data.vote_average,\r\n            duration: data.runtime,\r\n            date: data.release_date,\r\n            popularity: data.popularity,\r\n            language: data.original_language,\r\n            categories: data.genres,\r\n            poster: `https://image.tmdb.org/t/p/original/${data.poster_path}`,\r\n            backdrop: `https://image.tmdb.org/t/p/original/${data.backdrop_path}`,\r\n          };\r\n        } else {\r\n          item = {\r\n            id: data.id,\r\n            title: data.original_name,\r\n            overview: data.overview,\r\n            rate: data.vote_average,\r\n            duration: data.episode_run_time[0],\r\n            date: data.first_air_date,\r\n            popularity: data.popularity,\r\n            language: data.original_language,\r\n            categories: data.genres,\r\n            poster: `https://image.tmdb.org/t/p/original/${data.poster_path}`,\r\n            backdrop: `https://image.tmdb.org/t/p/original/${data.backdrop_path}`,\r\n            episodesNumber: data.number_of_episodes,\r\n            seasonsNumber: data.number_of_seasons,\r\n          };\r\n        }\r\n\r\n        setMovieData(item);\r\n        console.log(data, \"mobsad\");\r\n      }\r\n    );\r\n\r\n    getDataFromAPI(`https://api.themoviedb.org/3/${type}/${id}/credits`).then(\r\n      (data) => setCastData(data.cast.slice(0, 10))\r\n    );\r\n  }, [id]);\r\n\r\n  function onViewMoreClick() {}\r\n\r\n  return (\r\n    <div\r\n      className=\"h-100\"\r\n      style={{\r\n        backgroundImage: `url(${movie.poster})`,\r\n        backgroundSize: \"100%\",\r\n        // backgroundRepeat: \"no-repeat\",\r\n        objectFit: \"cover\",\r\n      }}\r\n    >\r\n      {/* style={{ backgroundColor: \"rgb(0,0,0,0.5)\" }} */}\r\n      {/* <div className=\"h-100 min-vh-100 \"> */}\r\n      <div className={`${styles.movieDetail} h-100 w-100  p-2 text-light `}>\r\n        <div className=\"w-100 \" style={{ height: \"70px\" }} />\r\n\r\n        <Container\r\n          className={`${styles.container}  h-100 py-2 p-lg-3 rounded-2 gap-3 d-flex flex-column justify-content-center align-items-center `}\r\n        >\r\n          <div\r\n            className={`${styles.detail} h-100 py-2 rounded-2 gap-3 d-flex `}\r\n          >\r\n            <figure\r\n              className=\" shadow rounded-3 m-0 col-lg-6\"\r\n              style={{ height: \"60%\" }}\r\n              // style={{  width: \"330px\", height: \"500px\" }}\r\n            >\r\n              <img\r\n                className=\" rounded-3 \"\r\n                style={{ height: \"100%\", width: \"100%\", opacity: \"1\" }}\r\n                src={movie.poster}\r\n                alt=\"\"\r\n              />\r\n            </figure>\r\n\r\n            <Col\r\n              md={6}\r\n              className=\" d-flex flex-column justify-content-center align-items-start p-md-3\"\r\n            >\r\n              <h2\r\n                className=\" m-0 w-100 fs-1 fw-bolder croissant-font p-2 \"\r\n                style={{ color: \"yellow\" }}\r\n              >\r\n                {movie.title}\r\n              </h2>\r\n\r\n              <section className=\"px-2 pb-2\">\r\n                <div className=\"d-flex flex-wrap align-items-sm-center justify-content-sm-start justify-content-center align-items-center   gap-3 fst-italic py-3  text-md-start list-unstyled\">\r\n                  {movie.categories?.map(({ name }, index) => (\r\n                    <li\r\n                      key={`genre-${index}`}\r\n                      className=\"p-1 px-2 rounded-2 fs-5\"\r\n                      style={{ border: \"1px solid yellow\" }}\r\n                    >\r\n                      {name}\r\n                    </li>\r\n                  ))}\r\n                </div>\r\n\r\n                <p className=\" text-md-start fs-5 fw-light \">\r\n                  {movie.overview}\r\n                </p>\r\n\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center  \">\r\n                  {iconData.map((item, index) => (\r\n                    <IconTextLabelItem\r\n                      key={`icon-text-${index}`}\r\n                      icon={item.icon}\r\n                      text={item.text}\r\n                      color={item.color}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </section>\r\n            </Col>\r\n          </div>\r\n          <div className=\"w-100 \">\r\n            <Swiper\r\n              className=\"w-100 d-flex flex-column justify-content-start align-items-center gap-3 p-3 rounded-2 shadow bg-dark-opacity\"\r\n              // wrapperClass=\"bg\"\r\n              modules={[Navigation, Scrollbar]}\r\n              freeMode={false}\r\n              slidesPerGroup={4}\r\n              spaceBetween={10}\r\n              centerInsufficientSlides={true}\r\n              loop={false}\r\n              slidesOffsetAfter={0}\r\n              // freeMode={true}\r\n              // loopFillGroupBlank={false}\r\n              centeredSlides={true}\r\n              // slidesPerView={'auto'}\r\n\r\n              breakpoints={{\r\n                0: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                320: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                480: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                640: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                768: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                992: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                1200: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n                1400: {\r\n                  width: 200,\r\n                  spaceBetween: 10,\r\n                },\r\n              }}\r\n              scrollbar={{ draggable: true }}\r\n              // onSwiper={(swiper) => console.log(swiper)}\r\n              // onSlideChange={() => console.log(\"slide change\")}\r\n            >\r\n              {castList?.map((item) => (\r\n                <SwiperSlide key={item.cast_id}>\r\n                  <CastCardItem cast={item} />\r\n                </SwiperSlide>\r\n              ))}\r\n              <SwiperSlide className=\" align-self-center px-4\">\r\n                <ButtonItem\r\n                  text={<BsThreeDots size={40} color=\"yellow\" />}\r\n                  // text={\"View More\"}\r\n                  className={\"border btn-outline-warning \"}\r\n                  // style={{ width: \"200px\", height: \"200px\" }}\r\n                  onClick={onViewMoreClick}\r\n                  // style={{ border: \"1px solid yellow\" }}\r\n                />\r\n              </SwiperSlide>\r\n            </Swiper>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPage;\r\n\r\n/* <div\r\nclassName=\" h-100 w-100 \"\r\nstyle={{\r\n  background: `url('https://image.tmdb.org/t/p/original/${movie.poster_path})'`,\r\n}}\r\n> */\r\n\r\n/* <figure className=\"h-100 w-100 m-0\">\r\n<img\r\n  className=\"w-100 h-100 object-fit-cover \"\r\n  style={{ opacity: \"0.5\" }}\r\n  src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n  alt=\"\"\r\n/>\r\n</figure> */\r\n\r\n/* <div className={`${styles.movieDetail} h-100 w-100  p-2 text-light `}>\r\n  <Container className={`${styles.container} h-100  gap-3 d-flex`}>\r\n    <figure\r\n      className=\" shadow rounded-3 m-0 col-lg-6\"\r\n      // style={{ height: \"90%\", width: \"50%\" }}\r\n      // style={{  width: \"330px\", height: \"500px\" }}\r\n    >\r\n      <img\r\n        className=\" object-fit-cover rounded-3 \"\r\n        style={{ height: \"100%\", width: \"100%\", opacity: \"1\" }}\r\n        src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\r\n        alt=\"\"\r\n      />\r\n    </figure>\r\n\r\n    <Col\r\n      md={6}\r\n      className=\" d-flex flex-column justify-content-center align-items-start p-md-3\"\r\n    >\r\n      <h2\r\n        className=\"fs-1 fw-bolder croissant-font text-md-start\"\r\n        style={{ color: \"yellow\" }}\r\n      >\r\n        {movie.original_title}\r\n      </h2>\r\n\r\n      <section className=\"px-2 pb-2\">\r\n        <div className=\"d-flex flex-wrap align-items-sm-center justify-content-sm-start justify-content-center align-items-center   gap-3 fst-italic py-3  text-md-start list-unstyled\">\r\n          {movie.genres?.map(({ name }, index) => (\r\n            <li\r\n              key={`genre-${index}`}\r\n              className=\"p-1 px-2 rounded-2 fs-5\"\r\n              style={{ border: \"1px solid yellow\" }}\r\n            >\r\n              {name}\r\n            </li>\r\n          ))}\r\n        </div>\r\n\r\n        <p className=\" text-md-start fs-4 fw-light \">\r\n          {movie.overview}\r\n        </p>\r\n\r\n        <div className=\"d-flex flex-wrap justify-content-between align-items-center  \">\r\n          {iconData.map((item, index) => (\r\n            <IconTextLabelItem\r\n              key={`icon-text-${index}`}\r\n              icon={item.icon}\r\n              text={item.text}\r\n            />\r\n          ))}\r\n        </div>\r\n      </section>\r\n      <ButtonItem\r\n        text={\"Return To Home\"}\r\n        className={\"btn-outline-light\"}\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n      />\r\n    </Col>\r\n  </Container>\r\n</div>\r\n</div> */\r\n\r\n/* <SwiperItem\r\n            listItems={castList?.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <div>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/original/${item.profile_path}`}\r\n                    style={{ width: \"200px\", height: \"200px\" }}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </SwiperSlide>\r\n            ))}\r\n            onViewMoreClick={onViewMoreClick}\r\n          /> */\r\n\r\n/* <ButtonItem\r\n            text={\"Return To Home\"}\r\n            className={\"btn-outline-light \"}\r\n            onClick={() => {\r\n              navigate(\"/\");\r\n            }}\r\n          /> */\r\n"],"names":["_ref","text","icon","color","width","_jsxs","className","style","children","_jsx","cast","src","concat","profile_path","alt","height","onError","event","target","includes","imageNotFound","original_name","_movie$categories","_useParams","useParams","id","type","getDataFromAPI","useContext","DataContext","_useState","useState","_useState2","_slicedToArray","movie","setMovieData","_useState3","_useState4","castList","setCastData","iconData","BsStarFill","size","rate","BiTimeFive","duration","LuLanguages","language","VscEye","popularity","BsCalendarDate","Date","date","toDateString","undefined","episodesNumber","seasonsNumber","useEffect","console","log","then","data","item","title","original_title","overview","vote_average","runtime","release_date","original_language","categories","genres","poster","poster_path","backdrop","backdrop_path","episode_run_time","first_air_date","number_of_episodes","number_of_seasons","slice","backgroundImage","backgroundSize","objectFit","styles","movieDetail","Container","container","detail","opacity","Col","md","map","index","name","border","IconTextLabelItem","Swiper","modules","Navigation","Scrollbar","freeMode","slidesPerGroup","spaceBetween","centerInsufficientSlides","loop","slidesOffsetAfter","centeredSlides","breakpoints","scrollbar","draggable","SwiperSlide","CastCardItem","cast_id","ButtonItem","BsThreeDots","onClick"],"sourceRoot":""}